/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_addressProvider",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "ADDRESSES_PROVIDER",
        outputs: [
            {
                internalType: "contract IPoolAddressesProvider",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "POOL",
        outputs: [
            {
                internalType: "contract IPool",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
    {
        inputs: [
            {
                internalType: "address[2]",
                name: "dexAddresses",
                type: "address[2]",
            },
            {
                internalType: "address[]",
                name: "buyingPath",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "sellingPath",
                type: "address[]",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "executeSimpleFlashLoan",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[3]",
                name: "dexAddresses",
                type: "address[3]",
            },
            {
                internalType: "address[]",
                name: "buyingPath",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "intermediatePath",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "sellingPath",
                type: "address[]",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "executeTriangularFlashLoan",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "asset",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "premium",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "initiator",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "params",
                type: "bytes",
            },
        ],
        name: "executeOperation",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60c06040523480156200001157600080fd5b50604051620014be380380620014be83398181016040528101906200003791906200026f565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000de91906200026f565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505062000132620001266200013960201b60201c565b6200014160201b60201c565b50620002a1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000237826200020a565b9050919050565b62000249816200022a565b81146200025557600080fd5b50565b60008151905062000269816200023e565b92915050565b60006020828403121562000288576200028762000205565b5b6000620002988482850162000258565b91505092915050565b60805160a0516111e9620002d5600039600081816102a4015281816103d40152610534015260006101dd01526111e96000f3fe60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a6146101455780637535d2461461015c5780638da5cb5b14610187578063f2fde38b146101b257610086565b80630542975c1461008b5780630d89d4ba146100b65780631b11d0ff146100df57806333d255501461011c57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a06101db565b6040516100ad9190610719565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d891906107fb565b6101ff565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610936565b610275565b60405161011391906109eb565b60405180910390f35b34801561012857600080fd5b50610143600480360381019061013e9190610a28565b610334565b005b34801561015157600080fd5b5061015a6103be565b005b34801561016857600080fd5b506101716103d2565b60405161017e9190610b25565b60405180910390f35b34801561019357600080fd5b5061019c6103f6565b6040516101a99190610b4f565b60405180910390f35b3480156101be57600080fd5b506101d960048036038101906101d49190610b6a565b61041f565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b6102076104a3565b60008585600081811061021d5761021c610b97565b5b90506020020160208101906102329190610b6a565b90506000878787878760405160200161024f959493929190610d15565b604051602081830303815290604052905061026b828483610521565b5050505050505050565b60008085876102849190610d8d565b90508773ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016102e1929190610df2565b6020604051808303816000875af1158015610300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103249190610e47565b5060019150509695505050505050565b61033c6104a3565b6000878760018a8a90506103509190610e74565b8181106103605761035f610b97565b5b90506020020160208101906103759190610b6a565b90506000898989898989896040516020016103969796959493929190610f34565b60405160208183030381529060405290506103b2828483610521565b50505050505050505050565b6103c66104a3565b6103d060006105ce565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104276104a3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90611017565b60405180910390fd5b6104a0816105ce565b50565b6104ab610692565b73ffffffffffffffffffffffffffffffffffffffff166104c96103f6565b73ffffffffffffffffffffffffffffffffffffffff161461051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690611083565b60405180910390fd5b565b60003090506000849050600084905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166342b0b77c85858589866040518663ffffffff1660e01b8152600401610593959493929190611159565b600060405180830381600087803b1580156105ad57600080fd5b505af11580156105c1573d6000803e3d6000fd5b5050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106df6106da6106d58461069a565b6106ba565b61069a565b9050919050565b60006106f1826106c4565b9050919050565b6000610703826106e6565b9050919050565b610713816106f8565b82525050565b600060208201905061072e600083018461070a565b92915050565b600080fd5b600080fd5b600080fd5b60008190508260206002028201111561075f5761075e61073e565b5b92915050565b600080fd5b600080fd5b60008083601f84011261078557610784610765565b5b8235905067ffffffffffffffff8111156107a2576107a161076a565b5b6020830191508360208202830111156107be576107bd61073e565b5b9250929050565b6000819050919050565b6107d8816107c5565b81146107e357600080fd5b50565b6000813590506107f5816107cf565b92915050565b60008060008060008060a0878903121561081857610817610734565b5b600061082689828a01610743565b965050604087013567ffffffffffffffff81111561084757610846610739565b5b61085389828a0161076f565b9550955050606087013567ffffffffffffffff81111561087657610875610739565b5b61088289828a0161076f565b9350935050608061089589828a016107e6565b9150509295509295509295565b60006108ad8261069a565b9050919050565b6108bd816108a2565b81146108c857600080fd5b50565b6000813590506108da816108b4565b92915050565b60008083601f8401126108f6576108f5610765565b5b8235905067ffffffffffffffff8111156109135761091261076a565b5b60208301915083600182028301111561092f5761092e61073e565b5b9250929050565b60008060008060008060a0878903121561095357610952610734565b5b600061096189828a016108cb565b965050602061097289828a016107e6565b955050604061098389828a016107e6565b945050606061099489828a016108cb565b935050608087013567ffffffffffffffff8111156109b5576109b4610739565b5b6109c189828a016108e0565b92509250509295509295509295565b60008115159050919050565b6109e5816109d0565b82525050565b6000602082019050610a0060008301846109dc565b92915050565b600081905082602060030282011115610a2257610a2161073e565b5b92915050565b60008060008060008060008060e0898b031215610a4857610a47610734565b5b6000610a568b828c01610a06565b985050606089013567ffffffffffffffff811115610a7757610a76610739565b5b610a838b828c0161076f565b9750975050608089013567ffffffffffffffff811115610aa657610aa5610739565b5b610ab28b828c0161076f565b955095505060a089013567ffffffffffffffff811115610ad557610ad4610739565b5b610ae18b828c0161076f565b935093505060c0610af48b828c016107e6565b9150509295985092959890939650565b6000610b0f826106e6565b9050919050565b610b1f81610b04565b82525050565b6000602082019050610b3a6000830184610b16565b92915050565b610b49816108a2565b82525050565b6000602082019050610b646000830184610b40565b92915050565b600060208284031215610b8057610b7f610734565b5b6000610b8e848285016108cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060029050919050565b600081905092915050565b6000819050919050565b610bef816108a2565b82525050565b6000610c018383610be6565b60208301905092915050565b6000610c1c60208401846108cb565b905092915050565b6000602082019050919050565b610c3a81610bc6565b610c448184610bd1565b9250610c4f82610bdc565b8060005b83811015610c8857610c658284610c0d565b610c6f8782610bf5565b9650610c7a83610c24565b925050600181019050610c53565b505050505050565b600082825260208201905092915050565b6000819050919050565b6000602082019050919050565b6000610cc48385610c90565b9350610ccf82610ca1565b8060005b85811015610d0857610ce58284610c0d565b610cef8882610bf5565b9750610cfa83610cab565b925050600181019050610cd3565b5085925050509392505050565b6000608082019050610d2a6000830188610c31565b8181036040830152610d3d818688610cb8565b90508181036060830152610d52818486610cb8565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d98826107c5565b9150610da3836107c5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dd857610dd7610d5e565b5b828201905092915050565b610dec816107c5565b82525050565b6000604082019050610e076000830185610b40565b610e146020830184610de3565b9392505050565b610e24816109d0565b8114610e2f57600080fd5b50565b600081519050610e4181610e1b565b92915050565b600060208284031215610e5d57610e5c610734565b5b6000610e6b84828501610e32565b91505092915050565b6000610e7f826107c5565b9150610e8a836107c5565b925082821015610e9d57610e9c610d5e565b5b828203905092915050565b600060039050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b610ede81610ea8565b610ee88184610eb3565b9250610ef382610ebe565b8060005b83811015610f2c57610f098284610c0d565b610f138782610bf5565b9650610f1e83610ec8565b925050600181019050610ef7565b505050505050565b600060c082019050610f49600083018a610ed5565b8181036060830152610f5c81888a610cb8565b90508181036080830152610f71818688610cb8565b905081810360a0830152610f86818486610cb8565b905098975050505050505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611001602683610f94565b915061100c82610fa5565b604082019050919050565b6000602082019050818103600083015261103081610ff4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061106d602083610f94565b915061107882611037565b602082019050919050565b6000602082019050818103600083015261109c81611060565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110dd5780820151818401526020810190506110c2565b838111156110ec576000848401525b50505050565b6000601f19601f8301169050919050565b600061110e826110a3565b61111881856110ae565b93506111288185602086016110bf565b611131816110f2565b840191505092915050565b600061ffff82169050919050565b6111538161113c565b82525050565b600060a08201905061116e6000830188610b40565b61117b6020830187610b40565b6111886040830186610de3565b818103606083015261119a8185611103565b90506111a9608083018461114a565b969550505050505056fea2646970667358221220c6b30861b9a3bd07d236a18803752f384361cd4f94ccc73b8252aa095185fb8e64736f6c634300080a0033";
const isSuperArgs = (xs) => xs.length > 1;
export class SimpleFlashLoan__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_addressProvider, overrides) {
        return super.deploy(_addressProvider, overrides || {});
    }
    getDeployTransaction(_addressProvider, overrides) {
        return super.getDeployTransaction(_addressProvider, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
SimpleFlashLoan__factory.bytecode = _bytecode;
SimpleFlashLoan__factory.abi = _abi;
